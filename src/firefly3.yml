services:
  app:
    image: fireflyiii/core:latest
    hostname: app
    container_name: firefly_iii_core
    restart: always
    volumes:
      - /srv/dev-disk-by-uuid-720cfb7f-b874-45a8-8232-d6e97c0f124a/shared/Firefly/firefly_uploads:/var/www/html/storage/upload
    env_file: /srv/dev-disk-by-uuid-720cfb7f-b874-45a8-8232-d6e97c0f124a/shared/Firefly/.env
    networks:
      - firefly_iii
    ports:
      - 8081:8080
    depends_on:
      - db

  db:
    image: postgres:latest  # Use the PostgreSQL image
    hostname: db
    container_name: firefly_iii_db
    restart: always
    env_file: /srv/dev-disk-by-uuid-720cfb7f-b874-45a8-8232-d6e97c0f124a/shared/Firefly/.db.env
    networks:
      - firefly_iii
    volumes:
      - /srv/dev-disk-by-uuid-720cfb7f-b874-45a8-8232-d6e97c0f124a/shared/Firefly/firefly_db:/var/lib/postgresql/data  # Update path for PostgreSQL data

  cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    image: alpine
    restart: always
    container_name: firefly_iii_cron
    command: sh -c "echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/REPLACEME\" | crontab - && crond -f -L /dev/stdout"
    networks:
      - firefly_iii

# Define OMV paths instead of Docker volumes
volumes:
  firefly_iii_upload:
    driver_opts:
      type: none
      o: bind
      device: /srv/dev-disk-by-uuid-720cfb7f-b874-45a8-8232-d6e97c0f124a/shared/Firefly/firefly_uploads

  firefly_iii_db:
    driver_opts:
      type: none
      o: bind
      device: /srv/dev-disk-by-uuid-720cfb7f-b874-45a8-8232-d6e97c0f124a/shared/Firefly/firefly_db

networks:
  firefly_iii:
    driver: bridge

